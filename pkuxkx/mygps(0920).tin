#var movemap[down]  {up};
#var movemap[east]  {west};
#var movemap[north]  {south};
#var movemap[northeast]  {southwest};
#var movemap[northwest]  {southeast};
#var movemap[south]  {north};
#var movemap[southeast]  {northwest};
#var movemap[southwest]  {northeast};
#var movemap[up]  {down};
#var movemap[west]  {east};
#var movemap[northup] {southdown};
#var movemap[southdown] {northup};
#var movemap[northdown] {southup};
#var movemap[southup] {northdown};
#var movemap[westup] {eastdown};
#var movemap[eastdown] {westup};
#var movemap[westdown] {eastup};
#var movemap[eastup] {westdown};
#var movemap[enter] {out};
#var movemap[out] {enter};

#var d2x[down]  {0};
#var d2x[east]  {1};
#var d2x[north]  {0};
#var d2x[northeast]  {1};
#var d2x[northwest]  {-1};
#var d2x[south]  {0};
#var d2x[southeast]  {1};
#var d2x[southwest]  {-1};
#var d2x[up]  {0};
#var d2x[west]  {-1};
#var d2x[northup] {0};
#var d2x[southdown] {0};
#var d2x[northdown] {0};
#var d2x[southup] {0};
#var d2x[westup] {-1};
#var d2x[eastdown] {1};
#var d2x[westdown] {-1};
#var d2x[eastup] {1};
#var d2x[enter] {0};
#var d2x[out] {0};

#var d2y[down]  {0};
#var d2y[east]  {0};
#var d2y[north]  {-1};
#var d2y[northeast]  {-1};
#var d2y[northwest]  {-1};
#var d2y[south]  {1};
#var d2y[southeast]  {1};
#var d2y[southwest]  {1};
#var d2y[up]  {0};
#var d2y[west]  {0};
#var d2y[northup] {-1};
#var d2y[southdown] {1};
#var d2y[northdown] {-1};
#var d2y[southup] {1};
#var d2y[westup] {0};
#var d2y[eastdown] {0};
#var d2y[westdown] {0};
#var d2y[eastup] {0};
#var d2y[enter] {0};
#var d2y[out] {0};

#var d2z[down]  {1};
#var d2z[east]  {0};
#var d2z[north]  {0};
#var d2z[northeast]  {0};
#var d2z[northwest]  {0};
#var d2z[south]  {0};
#var d2z[southeast]  {0};
#var d2z[southwest]  {0};
#var d2z[up]  {-1};
#var d2z[west]  {0};
#var d2z[northup] {-1};
#var d2z[southdown] {1};
#var d2z[northdown] {1};
#var d2z[southup] {-1};
#var d2z[westup] {-1};
#var d2z[eastdown] {1};
#var d2z[westdown] {1};
#var d2z[eastup] {-1};
#var d2z[enter] {0};
#var d2z[out] {0};
#var traversal_flag 1;
#alias kmove
{	
	#var knpc {%1};
	#var thismove {%2};
	#if {"$hasSociability"=="yes"}
	{
		#delay {2}
		{
			#send {$thismove};
			iwalk;	
		};
	}
	{
		#ticker {t_kmove}
		{
			a2c id here;
			#delay {2}
			{
				#if {$success_a2c==1}
				{
					#var hasnpc 0;
					#script {splitret} {python ./tintin/myscripts/pkuxkx/gps/mysplit.py "$knpc" ","};				
					#foreach {$splitret[%*]} {mynpc}
					{
						#var tempv @has_id{$mynpc};
						#if {"$tempv"=="1"} {#var hasnpc 1;#break;};
					};
					#if {$hasnpc==0}
					{
						#untick {t_kmove};		
						#send {$thismove};
						iwalk;				
					}
					{
						#foreach {$splitret[%*]} {mynpc} 
						{						
							killall $mynpc;
						};
					};	
				};
			};
		}{4};
	};
};
#alias igt
{
	#nop rid gt rid;	
	#var fromrid %1;
	#var torid %2;
	#list inner_Route_list create;
	#script {ret} {python ./tintin/myscripts/pkuxkx/gps/getcmds_p2p.py "$fromrid" "$torid"};	
	#showme {cost:$ret[1]};
	#list ret delete {1};	
	#foreach {$ret[%*]} {cmd} {#list inner_Route_list add {$cmd};};
	#nop #list inner_Route_list add {busy2};
	#list inner_Route_list add {#showme {here?}};
	#nop showme $inner_Route_list;
	inner_walk;
};
#act {^here?}
{	
	#var roominfotab @get_roominfo{$torid};
	#var torname $roominfotab[rname];
	#var here_flag 0;
	#act {^$torname%s - }
	{
		#unact {^$torname%s - };
		#format walk_done_flag %T;
		#showme {dest!};
		#var hgtcount 0;
		#var here_flag 1;
	};
	#delay {1}
	{
		a2c look;
		#delay {2}
		{
			#nop if current room is the same suppose to be;			
			#if {$here_flag==0}
			{
				#unact {^$torname%s - };
				#if {$hgtcount<15}
				{	
					#math hgtcount $hgtcount+1;		
					#showme {here is not the room $roominfotab[rname] ! try to go again.};
					#script {ret} {python ./tintin/myscripts/pkuxkx/gps/locatebylines.py "$torid" "$lines"};			
					#var hererid $ret[1];
					#if {"$hererid"=="0"}
					{
						#math hgtcount $hgtcount-1;
						#showme {here?};
					}
					{
						#showme {not here!};
						igt $hererid $torid;					
					};
				}{
					#showme {donottryagain.};									
				};
			};
		};
	};
};
#alias hgt
{
	#showme {start to go};
	#var torid %1;
	#var hgtcount 0;
	#delay {1}
	{
		a2c look;
		#delay {2}
		{
			#nop #showme $lines;
			#script {ret} {python ./tintin/myscripts/pkuxkx/gps/locatebylines.py "$torid" "$lines"};			
			#var hererid $ret[1];
			#math hgtcount $hgtcount+1;
			igt $hererid $torid;
		};
	};
};
#alias ngt
{
	#var locdesc %1;		
	#script {ret} {python ./tintin/myscripts/pkuxkx/gps/getRidsByName.py "$locdesc"};
	#list ret {size} {retsize};
	#if {"$retsize"=="0"}
	{
		#showme {can not find dest location!};
	}
	{
		#var torid $ret[1];
		hgt $torid;
	};
};
#alias stopTbyNpc
{
	#var npcename %0;		
	#act {(%*$npcename%*)}
	{		
		#unact {(%*$npcename%*)};
		pauseWalk;		
		#format {npcename} {%l} {$npcename};
		follow $npcename;
		stopt;	
		#var istep $istepmax;	
		speed;				
	};
};
#alias stopTbyNpc_cn
{
	#var npcename_cn %0;		
	#act {$npcename_cn(%*)}
	{		
		#unact {$npcename_cn(%%*)};
		pauseWalk;		
		#format {npcename} {%l} {%%1};
		follow $npcename;
		stopt;	
		#var istep $istepmax;	
		speed;				
	};
};
#alias gthere
{	
	a2c look;
	#delay {2}
	{		
		#script {ret} {python ./tintin/myscripts/pkuxkx/gps/locatehere.py "$lines"};			
		#showme {$ret};
	};
	
};
#alias pgt
{
	#var locdesc %0;		
	#script {ret} {python ./tintin/myscripts/pkuxkx/gps/getRidsByPy.py "$locdesc"};
	#list ret {size} {retsize};
	#if {"$retsize"=="0"}
	{
		#showme {can not find dest location!};
	}
	{
		#var torid $ret[1];
		hgt $torid;
	};
};
#alias rgt
{
	hgt $torid;
};
#alias stop_go
{
	#var hgtcount 100;
};
#alias tra_deh
{
	#showme {stopt to stop traversal.};
	$traversal_handler;						
	#delay {1}
	{
		look;
		#delay {1}
		{
			#if {$traversal_flag == 0}
			{	
				#script {ret} {python ./tintin/myscripts/pkuxkx/gps/getcmds_traversal.py "$locdesc" "$depth"};
				#list inner_Route_list create;
				#list inner_Route_list add {#showme {traversal_start};};
				#list inner_Route_list add {setSlowWalk;};
				#foreach {$ret[%*]} {cmd} {#list inner_Route_list add {$cmd};};	
				#list inner_Route_list add {#showme {traversal_finished};#var traversal_flag 1;};
				#list inner_Route_list add {setNormalWalk;};					
				inner_walk;

			};
		};
	};
};
#alias traversal
{
	
	#var locdesc %1;
	#var depth %2;
	#if {$depth==""}
	{
		#var depth 3;
	};
	#var traversal_flag 0;
	#script {ret} {python ./tintin/myscripts/pkuxkx/gps/getRidsByName.py "$locdesc"};
	#list ret {size} {retsize};	
	#if {"$retsize"=="0"}
	{
		#showme {can not find dest location!};
	}
	{
		#var torid $ret[1];
		#var destEventHandler {tra_deh};
		set_destEventHandler $destEventHandler;
		hgt $torid;	
	};
	
};
#alias ptra_deh
{
	#showme {stopt to stop traversal.};
	$traversal_handler;
	look;
	#delay {1}
	{
		#if {$traversal_flag == 0}
		{	
			#script {ret} {python ./tintin/myscripts/pkuxkx/gps/getcmds_ptraversal.py "$locdesc" "$depth"};
			#list inner_Route_list create;
			#list inner_Route_list add {#showme {traversal_start};};
			#list inner_Route_list add {setSlowWalk;};
			#foreach {$ret[%*]} {cmd} {#list inner_Route_list add {$cmd};};	
			#list inner_Route_list add {#showme {traversal_finished};#var traversal_flag 1;};
			#list inner_Route_list add {setNormalWalk;};					
			inner_walk;

		};
	};
};
#alias ptraversal
{
	
	#var locdesc {%1 %2};
	#var depth %3;
	#if {$depth==""}
	{
		#var depth 3;
	};
	#var traversal_flag 0;
	#script {ret} {python ./tintin/myscripts/pkuxkx/gps/getRidsByPy.py "$locdesc"};
	#list ret {size} {retsize};	
	#if {"$retsize"=="0"}
	{
		#showme {can not find dest location!};
	}
	{
		#var torid $ret[1];
		#var destEventHandler {ptra_deh};
		set_destEventHandler $destEventHandler;
		hgt $torid;		
	};
	
};
#alias pt {ptraversal};
#alias rtraversal
{
	traversal $locdesc $depth;
};
#alias stopt
{
	#var traversal_flag 1;
	#var istep $istepmax;	
};

#alias set_destEventHandler
{	
	#var destEventHandler %0;
	#act {^dest!}
	{
		#unact {^dest!};
		$destEventHandler;
	};
};
#list stack_torid create;
#list stack_destEventHandler create;
#list stack_walkPath create;
#list stack_hereid create;
#list stack_istep create;
#alias stack.put
{
	#list stack_torid add $torid;
	#list stack_destEventHandler add $destEventHandler;
	#list stack_walkPath add $inner_Route_list;
	#list stack_preid add $preid;
	#list stack_istep add $istep;
};
#alias stack.get
{
	#list stack_torid get {1} {torid};
	#list stack_destEventHandler get {1} {destEventHandler};
	#list stack_walkPath get {1}  {inner_Route_list};
	#list stack_preid get {1} {preid};
	#list stack_istep get {1} {istep};
	
	#list stack_torid delete {1} ;
	#list stack_destEventHandler delete {1};
	#list stack_walkPath delete {1} ;
	#list stack_preid delete {1} ;
	#list stack_istep delete {1} ;
	
	#if {$traversal_flag==2}
	{
		set_destEventHandler iwalk;
		hgt $preid;		
	}
	{
		set_destEventHandler $destEventHandler;
		hgt $torid;
	};
};
#alias get_Hgpass
{
	give qian 1 gold;
	ask qian about ½ø¹¬;
	#format hgpass_time %T;
	#ticker t_showpass_cd
	{
		#format hgpass_now %T;
		#math diff {580 - $hgpass_now + $hgpass_time};
		#showme {passport cd left: $diff};
		#if {$diff < -60}
		{
			#untick t_showpass_cd;
		};
	}{6};
	#delay {2}
	{
		stack.get;
	};	
};
#alias checkHgpass
{
	#nop check if has passport;
	#var haspass 0;
	#act {%*Hgtongxing ling%*}
	{		
		#var haspass 1;
	};
	i;i;i;
	#delay {2}
	{
		#unact {%*Hgtongxing ling%*};
		#if {$haspass==1}
		{
			iwalk;
		}
		{
			stack.put;
			set_destEventHandler get_Hgpass;
			hgt 66cbb0cd84cb1be459cbb2413a36f498;			
		};
	};
};
